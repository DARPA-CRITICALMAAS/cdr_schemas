[tool.poetry]
name = "cdr_schemas"
version = "0.2.2+draft"
description = "CDR Schemas"
authors = []
readme = "README.md"
packages = [
         {include = "cdr_schemas"},
         {include = "cdr_schemas/**/*.py"}
]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.6.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.4"
mypy = "^1.9.0"
isort = "^5.13.2"


[tool.poetry.group.ide]
optional = true

[tool.poetry.group.ide.dependencies]
ipython = "^8.22.2"
python-lsp-server = "^1.10.1"
python-lsp-ruff = "^2.2.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
jinja2 = "^3.1.3"
pydantic-2-mermaid = "^0.7.1"

[tool.poetry.scripts]
format = "dev.script:format"
lint = "dev.script:lint"
types = "dev.script:types"
docs = "dev.docs:run"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]
